-- Cleaning data in BigQuery Sandbox

SELECT *
 FROM `housing-404706.housing_data_set.nashville_housing` 
 LIMIT 1000;


 -- Converting SaleDate from String to Date data type

 SELECT *, SAFE_CAST(SaleDate AS Date) AS SaleDateConverted
 FROM `housing-404706.housing_data_set.nashville_housing` ;
 
 -- Populate Property Address data

 SELECT *
 FROM `housing-404706.housing_data_set.nashville_housing` 
-- WHERE PropertyAddress IS NULL
ORDER BY ParcelID;


SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, IFNULL(a.PropertyAddress, b.PropertyAddress) AS PropertyAddressFixed
FROM `housing-404706.housing_data_set.nashville_housing` a
JOIN `housing-404706.housing_data_set.nashville_housing` b 
 ON a.ParcelID = b.ParcelID
 AND a.UniqueID_ <> b.UniqueID_;
 --WHERE a.PropertyAddress IS NULL 

-- Breaking Address into individual columns (Address, City, State)

SELECT OwnerAddress, (split(OwnerAddress, ','))[safe_ordinal(1)] AS Addres,
(split(OwnerAddress, ','))[safe_ordinal(2)] AS City,
(split(OwnerAddress, ','))[safe_ordinal(3)] AS State  
 FROM `housing-404706.housing_data_set.nashville_housing` ;
 
-- Change Y to yes and N to No in "Sold as vacant" field

SELECT DISTINCT(SoldAsVacant)
FROM `housing-404706.housing_data_set.nashville_housing` ;

SELECT SoldAsVacant,
 CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
      WHEN SoldAsVacant = 'N' THEN 'No'
      ELSE SoldAsVacant
      END
FROM `housing-404706.housing_data_set.nashville_housing` ;

-- Creating new columns and updatin the table
UPDATE nashville_housing
SET SoldAsVacant = CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
      WHEN SoldAsVacant = 'N' THEN 'No'
      ELSE SoldAsVacant
      END;

-- Unfortunately In the free version of BigQuery (sandbox) function UPDATE is not available, so I wasn't able to do so. But the next step would be to make a view with data we need for analysis.
